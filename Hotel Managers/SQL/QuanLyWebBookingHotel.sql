USE master
GO

--Tạo lệnh tạo CSQL
IF EXISTS (SELECT NAME FROM SYS.DATABASES WHERE NAME='QuanLyWebBookingHotel')
	DROP DATABASE QuanLyWebBookingHotel
GO

IF EXISTS (SELECT NAME FROM SYS.DATABASES WHERE NAME='QuanLyWebBookingHotel')
	ALTER DATABASE QuanLyWebBookingHotel SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
GO

CREATE DATABASE QuanLyWebBookingHotel
	ON(NAME='QuanLyWebBookingHotel_DATA',FILENAME='D:\Code\SQL\QuanLyWebBookingHotel.MDF')
	LOG ON(NAME='QuanLyWebBookingHotel_LOG',FILENAME='D:\Code\SQL\QuanLyWebBookingHotel.LDF')
GO

USE QuanLyWebBookingHotel
GO

/*
Created		9/23/2024
Modified		10/14/2024
Project		
Model		
Company		
Author		
Version		
Database		MS SQL 7 
*/

CREATE TABLE Users (
    USER_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
    USERNAME Varchar(100) NOT NULL,
    PASSWORD Varchar(100) NULL,
    EMAIL Varchar(150) NOT NULL,
    ROLE Nvarchar(255) NULL,
    CREATED_AT Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (USER_ID)
);

CREATE TABLE Employees (
    EMPLOYEE_ID Varchar(255) NOT NULL UNIQUE,
    USER_ID INT NOT NULL,
    FULL_NAME Nvarchar(255) NOT NULL,
    POSITION Nvarchar(255) NULL,
    HIRE_DATE Datetime NULL,
    PHONE_NUMBER Varchar(20) NULL,
    SALARY Decimal(16,0) NULL,
    STATUS Nvarchar(50) NULL,
    PRIMARY KEY (EMPLOYEE_ID)
);

CREATE TABLE Customers (
    CUSTOMER_ID Varchar(255) NOT NULL UNIQUE,
    USER_ID INT NOT NULL,
    FULL_NAME Nvarchar(255) NOT NULL,
    PHONE_NUMBER Varchar(20) NOT NULL,
    ADDRESS Nvarchar(500) NULL,
    DATE_OF_BIRTH Datetime NOT NULL,
    NATIONALITY Varchar(100) NOT NULL,
    VIP_STATUS Varchar(50) NULL,
    PRIMARY KEY (CUSTOMER_ID)
);

CREATE TABLE Hotels (
    HOTEL_ID Varchar(255) NOT NULL UNIQUE,
    DESTINATION_ID INT NOT NULL,
    HOTEL_NAME Nvarchar(255) NOT NULL,
    HOTEL_ADDRESS Nvarchar(255) NOT NULL,
    CITY Varchar(255) NOT NULL,
    COUNTRY Varchar(255) NOT NULL,
    STAR_RATING Float NULL,
    PHONE_NUMBER Varchar(20) NOT NULL,
    EMAIL Varchar(150) NOT NULL,
    WEBSITE Varchar(255) NULL,
    NUMBER_OF_ROOMS INT NULL,
    HOTEL_TYPE Varchar(50) NOT NULL,
    LATITUDE Float NULL,
    LONGITUDE Float NULL,
    PRIMARY KEY (HOTEL_ID)
);

CREATE TABLE Rooms (
    ROOM_ID Varchar(255) NOT NULL UNIQUE,
    HOTEL_ID Varchar(255) NOT NULL,
    ROOM_TYPE Nvarchar(255) NOT NULL,
    PRICE_PER_DAY Decimal(16,0) NULL,
    MAX_OCCUPANCY INT NULL,
    ROOM_DESCRIPTION Nvarchar(255) NULL,
    AVAILABILITY_STATUS Nvarchar(255) NOT NULL,
    FLOOR INT NOT NULL, 
    PRIMARY KEY (ROOM_ID)
);

CREATE TABLE Bookings (
    BOOKING_ID Varchar(255) NOT NULL UNIQUE,
    CUSTOMER_ID Varchar(255) NOT NULL,
    HOTEL_ID Varchar(255) NOT NULL,
    ROOM_ID Varchar(255) NULL,
    BOOKING_DATE Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CHECK_IN_DATE Datetime NULL,
    CHECK_OUT_DATE Datetime NULL,
    PAYMENTS_STATUS Varchar(255) NOT NULL,
    TOTAL_AMOUNT Decimal(16,0) NULL,
    BOOKING_STATUS Nvarchar(255) NOT NULL,
    PRIMARY KEY (BOOKING_ID)
);

CREATE TABLE Reviews (
    REVIEW_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
    CUSTOMER_ID Varchar(255) NOT NULL,
    HOTEL_ID Varchar(255) NOT NULL,
    RATING INT NOT NULL,
    REVIEW_DATE Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
    COMMENTS Nvarchar(500) NULL,
    PRIMARY KEY (REVIEW_ID)
);

CREATE TABLE Services (
    SERVICE_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
    HOTEL_ID Varchar(255) NOT NULL,
    SERVICE_NAME Nvarchar(255) NULL,
    SERVICE_DESCRIPTION Nvarchar(500) NULL,
    PRICE Decimal(16,0) NULL,
    PRIMARY KEY (SERVICE_ID)
);

CREATE TABLE ServicesUsed (
    BOOKING_SERVICE_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
    BOOKING_ID Varchar(255) NOT NULL,
    SERVICE_ID INT NOT NULL,
    QUANTITY INT NULL,
    TOTAL_PRICE Decimal(16,0) NULL,
    SERVICE_USAGE_DATE Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (BOOKING_SERVICE_ID)
);

CREATE TABLE Payments (
    PAYMENT_ID Varchar(255) NOT NULL UNIQUE,
    USER_ID INT NOT NULL,
    BOOKING_ID Varchar(255) NOT NULL,
    INVOICE_DATE Datetime NULL,
    DUE_DATE Datetime NULL,
    TOTAL_AMOUNT Decimal(16,0) NULL,
    TAX_AMOUNT Decimal(16,0) NULL,
    AMOUNT_PAID Decimal(16,0) NULL,
    OUTSTANDING_AMOUNT Decimal(16,0) NULL,
    PAYMENT_DATE Datetime NULL,
    PAYMENT_METHOD Nvarchar(255) NULL,
    PAYMENT_STATUS Nvarchar(255) NOT NULL,
    PRIMARY KEY (PAYMENT_ID)
);

CREATE TABLE CardInformation (
    CARD_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
    USER_ID INT NOT NULL,
    CARD_NUMBER Varchar(16) NOT NULL,
    CARD_HOLDER_NAME Nvarchar(255) NOT NULL,
    EXPIRY_DATE Varchar(5) NOT NULL,
    CVV Varchar(3) NOT NULL,
    BILLING_ADDRESS Nvarchar(255) NULL,
    ISSUING_BANK Nvarchar(255) NULL,
    CARD_TYPE Nvarchar(50) NULL,
    CREATED_AT Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT Datetime NULL,
    PRIMARY KEY (CARD_ID)
);

CREATE TABLE Discounts (
    DISCOUNT_ID Varchar(255) NOT NULL UNIQUE,
    CODE Varchar(50) NOT NULL,
    DESCRIPTION Nvarchar(500) NOT NULL,
    DISCOUNT_TYPE Nvarchar(100) NOT NULL,
    DISCOUNT_VALUE Decimal(16,0) NOT NULL,
    START_DATE Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
    END_DATE Datetime NULL,
    MIN_BOOKING_VALUE Decimal(16,0) NULL,
    STATUS Nvarchar(100) NULL,
    PRIMARY KEY (DISCOUNT_ID)
);

CREATE TABLE DiscountsApplied (
    DISCOUNT_APPLY_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
    DISCOUNT_ID Varchar(255) NOT NULL,
    BOOKING_ID Varchar(255) NOT NULL,
    APPLY_DATE Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (DISCOUNT_APPLY_ID, DISCOUNT_ID, BOOKING_ID)
);

Create table Notifications (
	NOTIFICATION_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	USER_ID INT NOT NULL,
	TITLE Nvarchar(100) NOT NULL,
	MESSAGE Nvarchar(500) NOT NULL,
	STATUS Nvarchar(30) NULL,
	TYPE Varchar(20) NOT NULL,
	CREATED_AT Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
	Primary Key (NOTIFICATION_ID)
);

Create table TransactionHistory (
	TRANSACTION_ID INT Identity(1,1) NOT NULL,
	USER_ID INT NOT NULL,
	PAYMENT_ID Varchar(255) NOT NULL,
	TRANSACTION_TYPE Nvarchar(50) NULL,
	AMOUNT Numeric(16,0) NULL,
	STATUS Nvarchar(50) NULL,
	TRANSACTION_DATE Datetime NULL,
	Primary Key (TRANSACTION_ID, USER_ID, PAYMENT_ID)
);

Create table RoomAmenities (
	FACILITY_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	ROOM_ID Varchar(255) NOT NULL,
	FACILITY_NAME Nvarchar(200) NULL,
	DESCRIBE Nvarchar(500) NULL,
	Primary Key (FACILITY_ID)
);

Create table CancellationPolicy (
	POLICY_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	HOTEL_ID Varchar(255) NOT NULL,
	POLICY_DESCRIPTION Nvarchar(500) NOT NULL,
	CREATED_AT Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
	Primary Key (POLICY_ID)
);

Create table VIPMembers (
	VIP_ID Varchar(255) NOT NULL UNIQUE,
	CUSTOMER_ID Varchar(255) NOT NULL,
	POINTS INT NULL,
	TIER Nvarchar(50) NULL,
	ACTIVITY_STATUS Nvarchar(50) NULL,
	ACT_AT Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
	Primary Key (VIP_ID)
);

Create table TouristDestinations (
	DESTINATION_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	DESTINATION_NAME Nvarchar(255) NOT NULL,
	DESCRIPTION Nvarchar(500) NULL,
	STAR_RATING Float NULL,
	LOCATION Nvarchar(255) NULL,
	Primary Key (DESTINATION_ID)
);

Create table SearchHistory (
	SEARCH_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	USER_ID INT NOT NULL,
	SEARCH_QUERY Nvarchar(255) NULL,
	SEARCH_DATE Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
	LOCATION Nvarchar(255) NULL,
	RESULTS_COUNT INT NULL,
	Primary Key (SEARCH_ID)
);

Create table EmployeeImages (
	IMAGE_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	EMPLOYEE_ID Varchar(255) NOT NULL,
	IMAGE Varchar(255) NULL,
	Primary Key (IMAGE_ID)
);

Create table CustomerImages (
	IMAGE_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	CUSTOMER_ID Varchar(255) NOT NULL,
	IMAGE Varchar(255) NULL,
	Primary Key (IMAGE_ID)
);

Create table HotelImages (
	IMAGE_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	HOTEL_ID Varchar(255) NOT NULL,
	IMAGE Varchar(255) NULL,
	Primary Key (IMAGE_ID)
);

Create table RoomImages (
	IMAGE_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	ROOM_ID Varchar(255) NOT NULL,
	IMAGE Varchar(255) NULL,
	Primary Key (IMAGE_ID)
);


Create table TouristDestinationImages (
	IMAGE_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	DESTINATION_ID INT NOT NULL,
	IMAGE Varchar(255) NULL,
	Primary Key (IMAGE_ID)
);


Create table ReviewImages (
	IMAGE_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	REVIEW_ID INT NOT NULL,
	IMAGE Varchar(255) NULL,
	Primary Key (IMAGE_ID)
);


Create table Attractions (
	ATTRACTION_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	DESTINATION_ID INT NOT NULL,
	ATTRACTION_NAME Nvarchar(255) NULL,
	DESCRIPTION Nvarchar(255) NULL,
	LATITUDE Float NULL,
	LONGITUDE Float NULL,
	OPENING_HOURS Varchar(100) NULL,
	TICKET_PRICE Numeric(16,2) NULL,
	Primary Key (ATTRACTION_ID)
);


Create table AttractionImages (
	IMAGE_ID INT AUTO_INCREMENT NOT NULL UNIQUE,
	ATTRACTION_ID INT NOT NULL,
	IMAGE Varchar(255) NULL,
	Primary Key (IMAGE_ID)
);


CREATE TABLE Countries (
    ISO_Code VARCHAR(3) NOT NULL UNIQUE,
    Country_Name NVARCHAR(100) NOT NULL,
    PRIMARY KEY (ISO_Code)
);
GO

CREATE TABLE DiscountsAppliedToVIP (
    DISCOUNT_ID VARCHAR(255) NOT NULL,
    VIP_ID VARCHAR(255) NOT NULL,
    PRIMARY KEY (DISCOUNT_ID, VIP_ID)
);
GO

ALTER TABLE EmployeePhotos ADD FOREIGN KEY (EMPLOYEE_ID) REFERENCES Employees (EMPLOYEE_ID);
GO
ALTER TABLE Rooms ADD FOREIGN KEY (HOTEL_ID) REFERENCES Hotels (HOTEL_ID);
GO
ALTER TABLE Bookings ADD FOREIGN KEY (HOTEL_ID) REFERENCES Hotels (HOTEL_ID);
GO
ALTER TABLE Reviews ADD FOREIGN KEY (HOTEL_ID) REFERENCES Hotels (HOTEL_ID);
GO
ALTER TABLE Services ADD FOREIGN KEY (HOTEL_ID) REFERENCES Hotels (HOTEL_ID);
GO
ALTER TABLE CancellationPolicies ADD FOREIGN KEY (HOTEL_ID) REFERENCES Hotels (HOTEL_ID);
GO
ALTER TABLE HotelPhotos ADD FOREIGN KEY (HOTEL_ID) REFERENCES Hotels (HOTEL_ID);
GO
ALTER TABLE Bookings ADD FOREIGN KEY (ROOM_ID) REFERENCES Rooms (ROOM_ID);
GO
ALTER TABLE RoomAmenities ADD FOREIGN KEY (ROOM_ID) REFERENCES Rooms (ROOM_ID);
GO
ALTER TABLE RoomPhotos ADD FOREIGN KEY (ROOM_ID) REFERENCES Rooms (ROOM_ID);
GO
ALTER TABLE Payments ADD FOREIGN KEY (BOOKING_ID) REFERENCES Bookings (BOOKING_ID);
GO
ALTER TABLE ServicesUsed ADD FOREIGN KEY (BOOKING_ID) REFERENCES Bookings (BOOKING_ID);
GO
ALTER TABLE DiscountsApplied ADD FOREIGN KEY (BOOKING_ID) REFERENCES Bookings (BOOKING_ID);
GO
ALTER TABLE Bookings ADD FOREIGN KEY (CUSTOMER_ID) REFERENCES Customers (CUSTOMER_ID);
GO
ALTER TABLE Reviews ADD FOREIGN KEY (CUSTOMER_ID) REFERENCES Customers (CUSTOMER_ID);
GO
ALTER TABLE VIPs ADD FOREIGN KEY (CUSTOMER_ID) REFERENCES Customers (CUSTOMER_ID);
GO
ALTER TABLE CustomerPhotos ADD FOREIGN KEY (CUSTOMER_ID) REFERENCES Customers (CUSTOMER_ID);
GO
ALTER TABLE ReviewPhotos ADD FOREIGN KEY (REVIEW_ID) REFERENCES Reviews (REVIEW_ID);
GO
ALTER TABLE ServicesUsed ADD FOREIGN KEY (SERVICE_ID) REFERENCES Services (SERVICE_ID);
GO
ALTER TABLE TransactionHistory ADD FOREIGN KEY (PAYMENT_ID) REFERENCES Payments (PAYMENT_ID);
GO
ALTER TABLE Employees ADD FOREIGN KEY (USER_ID) REFERENCES Users (USER_ID);
GO
ALTER TABLE Customers ADD FOREIGN KEY (USER_ID) REFERENCES Users (USER_ID);
GO
ALTER TABLE Notifications ADD FOREIGN KEY (USER_ID) REFERENCES Users (USER_ID);
GO
ALTER TABLE Payments ADD FOREIGN KEY (USER_ID) REFERENCES Users (USER_ID);
GO
ALTER TABLE TransactionHistory ADD FOREIGN KEY (USER_ID) REFERENCES Users (USER_ID);
GO
ALTER TABLE SearchHistory ADD FOREIGN KEY (USER_ID) REFERENCES Users (USER_ID);
GO
ALTER TABLE CardInfo ADD FOREIGN KEY (USER_ID) REFERENCES Users (USER_ID);
GO
ALTER TABLE DiscountsApplied ADD FOREIGN KEY (DISCOUNT_ID) REFERENCES Discounts (DISCOUNT_ID);
GO
ALTER TABLE Hotels ADD FOREIGN KEY (DESTINATION_ID) REFERENCES TouristDestinations (DESTINATION_ID);
GO
ALTER TABLE DestinationPhotos ADD FOREIGN KEY (DESTINATION_ID) REFERENCES TouristDestinations (DESTINATION_ID);
GO
ALTER TABLE Attractions ADD FOREIGN KEY (DESTINATION_ID) REFERENCES TouristDestinations (DESTINATION_ID);
GO
ALTER TABLE AttractionPhotos ADD FOREIGN KEY (ATTRACTION_ID) REFERENCES Attractions (ATTRACTION_ID);
GO

SET QUOTED_IDENTIFIER ON;
GO

SET QUOTED_IDENTIFIER OFF;
GO
